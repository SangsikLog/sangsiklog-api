version: '3.8'

services:
  mysql:
    image: mysql:8.0
    container_name: mysql
    environment:
      MYSQL_ROOT_PASSWORD: root  # 초기 루트 비밀번호 설정
      MYSQL_DATABASE: sangsiklog
      MYSQL_USER: sangsiklog
      MYSQL_PASSWORD: sangsik123
    ports:
      - "3306:3306"
    volumes:
      - ./mysql-data:/var/lib/mysql
      - ./mysql-initdb:/docker-entrypoint-initdb.d

  zookeeper:
    image: confluentinc/cp-zookeeper:7.0.1
    container_name: zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "2181:2181"

  kafka:
    image: confluentinc/cp-kafka:7.0.1
    container_name: kafka
    depends_on:
      - zookeeper
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    ports:
      - "9092:9092"
    volumes:
      - ./kafka-data:/var/lib/kafka/data\

  kafka-ui:
    image: provectuslabs/kafka-ui:latest
    container_name: kafka-ui
    depends_on:
      - kafka
    environment:
      KAFKA_CLUSTERS_0_NAME: local-kafka
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: kafka:9092
    ports:
      - "8000:8080"

  predixy:
    image: haandol/predixy
    container_name: predixy
    hostname: predixy
    command: predixy etc/predixy/conf/predixy.conf
    volumes:
      - ./opt/predixy/conf:/etc/predixy/conf
      - ./predixy.log:/etc/logs/predixy.log
    ports:
      - "7617:7617"
    networks:
      - redis-net

  redis-node-1:
    image: redis:latest
    container_name: redis-node-1
    volumes:
      - ./opt/redis/master/redis-node-1.conf:/usr/local/etc/redis-node-1.conf
      - ./start.sh:/start.sh
    command: sh -c "redis-server /usr/local/etc/redis-node-1.conf"
    ports:
      - "7000:7000"
      - "17000:17000"
    networks:
      - redis-net

  redis-node-2:
    image: redis:latest
    container_name: redis-node-2
    volumes:
      - ./opt/redis/master/redis-node-2.conf:/usr/local/etc/redis-node-2.conf
    command: sh -c "sleep 3 && redis-server /usr/local/etc/redis-node-2.conf"
    ports:
      - "7001:7001"
      - "17001:17001"
    networks:
      - redis-net

  redis-node-3:
    image: redis:latest
    container_name: redis-node-3
    volumes:
      - ./opt/redis/master/redis-node-3.conf:/usr/local/etc/redis-node-3.conf
    command: sh -c "sleep 3 && redis-server /usr/local/etc/redis-node-3.conf"
    ports:
      - "7002:7002"
      - "17002:17002"
    networks:
      - redis-net

  redis-node-4:
    image: redis:latest
    container_name: redis-node-4
    volumes:
      - ./opt/redis/salve/redis-node-4.conf:/usr/local/etc/redis-node-4.conf
    command: sh -c "sleep 3 && redis-server /usr/local/etc/redis-node-4.conf"
    ports:
      - "7100:7100"
      - "17100:17100"
    networks:
      - redis-net

  redis-node-5:
    image: redis:latest
    container_name: redis-node-5
    volumes:
      - ./opt/redis/salve/redis-node-5.conf:/usr/local/etc/redis-node-5.conf
    command: sh -c "sleep 3 && redis-server /usr/local/etc/redis-node-5.conf"
    ports:
      - "7101:7101"
      - "17101:17101"
    networks:
      - redis-net

  redis-node-6:
    image: redis:latest
    container_name: redis-node-6
    volumes:
      - ./opt/redis/salve/redis-node-6.conf:/usr/local/etc/redis-node-6.conf
    command: sh -c "sleep 3 && redis-server /usr/local/etc/redis-node-6.conf"
    ports:
      - "7102:7102"
      - "17102:17102"
    networks:
      - redis-net

networks:
  redis-net:
    driver: bridge

volumes:
  mysql-data:
  kafka-data: