server:
  port: 8080

spring:
  application:
    name: sangsiklog-gateway
  main:
    web-application-type: reactive

  data:
    redis:
      host: redisc-p3157.vpc-cdb.ntruss.com
      port: 6379

  cloud:
    gateway:
      routes:
        - id: auth-route
          uri: lb://auth-api
          predicates:
            - Path=/api/auth/**
            - Method=POST,GET,OPTIONS
          filters:
            - name: CircuitBreaker
              args:
                name: authCircuitBreaker
                fallbackUri: forward:/fallback/authFailure
            - RewritePath=/api/auth$, /v1/auth
            - RewritePath=/api/auth/(?<segment>.*), /v1/auth/${segment}

        - id: graphql-route
          uri: lb://graphql-service
          predicates:
            - Path=/api/graphql
            - Method=POST,GET,OPTIONS
          filters:
            - AuthenticationFilter
            - RewritePath=/api/graphql$, /graphql

      global-cors:
        cors-configurations:
          '[/**]':
            allowed-origins: "https://sangsiklog.store"
            allowed-methods:
              - GET
              - POST
              - OPTIONS
            allowed-headers:
              - "*"
            allow-credentials: true
      default-filters:
        - DedupeResponseHeader=Access-Control-Allow-Origin Access-Control-Allow-Credentials
        - name: RequestRateLimiter
          args:
            redis-rate-limiter.replenishRate: 100
            redis-rate-limiter.burstCapacity: 500
            key-resolver: "#{@ipKeyResolver}"

eureka:
  instance:
    prefer-ip-address: true
    hostname: sangsiklog-gateway
  client:
    service-url:
      defaultZone: http://service-discovery:8000/eureka/
    registerWithEureka: true
    fetchRegistry: true

    rest-template-timeout:
      connect-timeout: 5000
      connect-request-timeout: 8000
      socket-timeout: 10000

resilience4j:
  circuitbreaker:
    instances:
      authCircuitBreaker:
        register-health-indicator: true
        sliding-window-size: 5
        minimum-number-of-calls: 10
        permitted-number-of-calls-in-half-open-state: 10
        automatic-transition-from-open-to-half-open-enabled: true
        wait-duration-in-open-state: 5000
        failure-rate-threshold: 50
        event-consumer-buffer-size: 10
        record-exceptions:
          - java.util.concurrent.TimeoutException
          - org.springframework.cloud.gateway.support.NotFoundException
          - io.github.resilience4j.circuitbreaker.CallNotPermittedException

  timelimiter:
    configs:
      default:
        timeout-duration: 5s

management:
  tracing:
    sampling:
      probability: 1.0
    propagation:
      consume: b3
      produce: b3_multi
  zipkin:
    tracing:
      endpoint: "http://zipkin:9411/api/v2/spans"
  endpoints:
    web:
      exposure:
        include:
          - info
          - health
          - prometheus